# This workflow should control anything to do with detection service
# Including tests, building the docker image and pushing it
# It should run on both development and production scenarios
# Production workflow (tagging the image as "latest") should run only on tagged version push


name: Detection service workflow

on:
  workflow_dispatch:
  push:
    branches: [main]
    tags:
      - "v*.*.*"
    paths:
      # NOTE: Path filters are ignored for tag pushes
      - "src/services/image_recognition/**"
      - "tests/image_recognition/**"
  pull_request:
    branches: [main]
    paths:
      - "src/services/image_recognition/**"
      - "tests/image_recognition/**"
      - ".github/workflows/detection-svc.yml"


env:
  DOCKER_IMAGE_NAME: ohad24/${{ github.event.repository.name }}-detect-svc


jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov requests
          pip install -r src/services/image_recognition/requirements.txt
      - name: Lint with flake8
        run: |
          # TODO: configure flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest --cov=tests/image_recognition --cov-report=xml tests/image_recognition
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    # actions/checkout MUST come before auth
    - uses: 'actions/checkout@v3'

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'
